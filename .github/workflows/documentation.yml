name: Documentation

on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version: ['1.9']
        julia-arch: [x64]
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            ort_url: 'https://github.com/microsoft/onnxruntime/releases/download/v1.12.1/onnxruntime-linux-x64-1.12.1.tgz'
            ort_archieve_name: 'onnxruntime-linux-x64-1.12.1.tgz'
            ort_dir: 'onnxruntime-linux-x64-1.12.1'
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup CMake v3.21
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.21'
      - run: cmake --version

      - name: Download ONNX Runtime
        run: |
          wget -q ${{ matrix.ort_url }}
          tar -xf ${{ matrix.ort_archieve_name }}
          rm ${{ matrix.ort_archieve_name }}

      - name: Setup OpenModelica
        uses: AnHeuermann/setup-openmodelica@v0.4
        with:
          version: 'nightly'
          packages: |
            'omc'
      - run: |
          which omc
          omc --version

      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}

      - name: Cache Julia
        uses: julia-actions/cache@v1

      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.develop(PackageSpec(path=joinpath(pwd(), "examples", "NaiveONNX.jl"))); Pkg.instantiate()'

      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
        run: julia --project=docs/ docs/make.jl
